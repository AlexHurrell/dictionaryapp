{"version":3,"sources":["presentational/dictionaryList.js","actions/index.js","container/overview.js","presentational/datalist.js","container/loneDictionary.js","router.js","App.js","reducers/dictReducer.js","store/store.js","serviceWorker.js","index.js"],"names":["DictionaryList","props","ArticleItems","Object","keys","data","map","items","index","color","className","key","style","backgroundColor","health","class","title","to","onClick","deleteDict","del_dict","id","type","del_row","update_row","column","value","validate","Overview","name","dispatch","state","handleChange","bind","handleSubmit","event","this","setState","target","preventDefault","dictionaries","onSubmit","placeholder","width","onChange","disabled","Component","connect","Datalist","bgColor","cycle","duplicate","chain","fork","Rows","verticalAlign","updateRow","defaultValue","domain","range","deleteRow","Lonedictionary","row","match","params","trim","console","log","dictionary","Ownprops","Router","exact","from","path","component","App","defaultState","dict","action","updated","assign","push","dictionarydata","filter","el","newData","i","length","j","store","createStore","combineReducers","dictReducer","Boolean","window","location","hostname","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e0e24b9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DictionaryList = (props) => {\r\n\r\n    const ArticleItems = Object.keys(props.data).map((items, index) => {\r\n\r\n        const bgColor = (color) => {\r\n            if (color === \"warning\") {\r\n                return \"orange\"\r\n            } else if (color === \"good\") {\r\n                return \"green\"\r\n            } else if (color === \"critical\") {\r\n                return \"red\"\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"row m-2 p-2 listing\" key={index}>\r\n                <div className=\"col-2\" style={{ backgroundColor: bgColor(props.data[items].health) }} >\r\n                    <div class=\"d-flex h-100\">\r\n                        <div class=\"align-self-center mx-auto\">\r\n                            {props.data[items].health === \"warning\" ? <i className=\"fas fa-exclamation align-self-center \" title=\"Check Dictionary\"></i> : \"\"}\r\n                            {props.data[items].health === \"critical\" ? <i className=\"fas fa-times align-self-center \" title=\"Can't Further Process Dictionary\"></i> : \"\"}\r\n                            {props.data[items].health === \"good\" ? <i className=\"fas fa-check align-self-center \"  title=\"Dictionary is OK\"></i> : \"\"}\r\n\r\n                        </div>\r\n                        </div>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <Link to={`/dictionary/${items}`}>\r\n                        <div class=\"d-flex h-100\">\r\n                            <div class=\"align-self-center mx-auto\">\r\n                                <h4 className=\"mb-0\" style={{color: \"black\"}}>{items}</h4>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    <button className=\"full-width\" onClick={() => props.deleteDict(items)} >X</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"container pt-3\">\r\n            {ArticleItems}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DictionaryList","export const add_dict = id => ({\r\n    type: 'ADD_DICT',\r\n    id\r\n})\r\n\r\nexport const del_dict = id => ({\r\n    type: 'DEL_DICT',\r\n    id\r\n})\r\n\r\nexport const add_row = (id, domain, range) => ({\r\n    type: 'ADD_ROW',\r\n    id,\r\n    domain,\r\n    range\r\n})\r\n\r\nexport const del_row = (id, index) => ({\r\n    type: 'DEL_ROW',\r\n    id,\r\n    index\r\n})\r\n\r\nexport const update_row = (id, index, column, value) => ({\r\n    type: 'UPDATE_ROW',\r\n    id,\r\n    index,\r\n    column,\r\n    value\r\n})\r\n\r\nexport const validate = id => ({\r\n    type: 'VALIDATE',\r\n    id,\r\n})\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DictionaryList from '../presentational/dictionaryList';\r\nimport { add_dict, del_dict } from '../actions/index';\r\n\r\nclass Overview extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: ''\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.deleteDict = this.deleteDict.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.dispatch(add_dict(this.state.name));\r\n        this.setState({ name: '' });\r\n        event.preventDefault();\r\n    }\r\n\r\n    deleteDict = (name) => {\r\n        this.props.dispatch(del_dict(name));\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"pt-4\">\r\n                <h3>Dictionaries Overview</h3>\r\n\r\n                <DictionaryList data={this.props.dictionaries} deleteDict={this.deleteDict} />\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"container pt-5\">\r\n                        <div className=\"row m-2 p-2\">\r\n                            <div className=\"col-2\">\r\n                            </div>\r\n                            <div className=\"col-8\">\r\n                                <input placeholder=\"Enter Dictionary Name\" style={{ width: \"100%\" }} value={this.state.name} onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"col-2\">\r\n                                <button className=\"full-width\" type=\"submit\" disabled={!this.state.name} style={{ width: \"100%\" }} value=\"Submit\">Submit</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form >\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dictionaries: state.dictionaries,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Overview)","import React from 'react'\r\n\r\nconst Datalist = (props) => {\r\n\r\n    const bgColor = (items) => {\r\n        if (items.cycle) {\r\n            return \"red\"\r\n        } else if (items.duplicate || items.chain || items.fork) {\r\n            return \"orange\"\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    const Rows = props.data.map((items, index) => {\r\n\r\n        return (\r\n                <div className=\"row m-2 p-2 listing\" style={{ backgroundColor: bgColor(items) }} key={index}>\r\n                    <div className=\"col-2\">\r\n                        {items.cycle ? <i className=\"fas fa-recycle p-1\" style={{verticalAlign: \"middle\"}} title=\"cycle\"></i> : \"\"}\r\n                        {items.duplicate ? <i className=\"fas fa-clone p-1\" style={{verticalAlign: \"middle\"}} title=\"duplicate\"></i> : \"\"}\r\n                        {items.chain ? <i className=\"fas fa-link p-1\" style={{verticalAlign: \"middle\"}} title=\"chain\"></i> : \"\"}\r\n                        {items.fork ? <i className=\"fas fa-share-alt p-1\" style={{verticalAlign: \"middle\"}} title=\"fork\"></i> : \"\"}\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <input className=\"full-width\" style={{ width: \"100%\" }} onChange={(event) => props.updateRow(index, event)} name=\"domain\" defaultValue={items.domain} />\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <input className=\"full-width\" style={{ width: \"100%\" }} onChange={(event) => props.updateRow(index, event)} name=\"range\" defaultValue={items.range} />\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        <button className=\"full-width\" onClick={() => props.deleteRow(index)}>X</button>\r\n                    </div>\r\n                </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"container pt-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <b>Domain</b>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <b>Range</b>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                </div>\r\n            </div>\r\n            {Rows}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Datalist","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { del_row, add_row, update_row, validate } from '../actions/index';\r\nimport Datalist from '../presentational/datalist';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Lonedictionary extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n        this.updateRow = this.updateRow.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.props.dispatch(validate(this.props.match.params.id))\r\n        this.state = {\r\n            domain: '',\r\n            range: ''\r\n        };\r\n    }\r\n\r\n    deleteRow = (row) => {\r\n        this.props.dispatch(del_row(this.props.match.params.id, row));\r\n        this.props.dispatch(validate(this.props.match.params.id))\r\n    }\r\n\r\n    updateRow = (index, event) => {\r\n        this.props.dispatch(update_row(this.props.match.params.id, index, event.target.name, event.target.value.trim()))\r\n        this.props.dispatch(validate(this.props.match.params.id))\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log(this.state.value);\r\n        this.props.dispatch(add_row(this.props.match.params.id, this.state.domain, this.state.range));\r\n        this.props.dispatch(validate(this.props.match.params.id))\r\n        this.setState({ domain: '' });\r\n        this.setState({ range: '' });\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"pt-4\">\r\n                <Link to=\"/overview\">\r\n                    <i className=\"fas fa-arrow-circle-left fa-lg\"></i>\r\n                </Link>\r\n                <h3>{this.props.match.params.id}</h3>\r\n                <Datalist data={this.props.dictionary.data} deleteRow={this.deleteRow} updateRow={this.updateRow} />\r\n\r\n                <form onSubmit={this.handleSubmit} >\r\n                    <div className=\"container pt-2\">\r\n                        <div className=\"row m-2 p-2\">\r\n                            <div style={{verticalAlign: \"middle\"}} className=\"col-2\">\r\n                                {this.props.dictionary.health === \"critical\" ? <i className=\"fas fa-times p-1\" title=\"Fix Cycle\"></i>  : <div><b>Add New Row</b></div>}\r\n                            </div>\r\n\r\n                            <div className=\"col-4\">\r\n                                <input name=\"domain\" style={{ width: \"100%\" }} placeholder=\"domain\" value={this.state.domain} disabled={this.props.dictionary.health === \"critical\"}  onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <input name=\"range\" style={{ width: \"100%\" }} placeholder=\"range\" value={this.state.range} disabled={this.props.dictionary.health === \"critical\"}  onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"col-2\">\r\n                                <button className=\"full-width\" type=\"submit\" value=\"Submit\" disabled={!this.state.domain || !this.state.range}>Submit</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form >\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, Ownprops) => {\r\n    return {\r\n        dictionary: state.dictionaries[Ownprops.match.params.id]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Lonedictionary)\r\n","import { Switch, Route, Redirect } from 'react-router-dom'\r\nimport React from 'react'\r\nimport Overview from './container/overview'\r\nimport Lonedictionary from './container/loneDictionary'\r\n\r\nconst Router = () => (\r\n    <Switch>\r\n        <Redirect exact from='/' to=\"/overview\" />\r\n        <Route path='/overview' component={Overview} />\r\n        <Route path='/dictionary/:id' component={Lonedictionary} />\r\n    </Switch>\r\n)\r\n\r\nexport default Router","import React from 'react';\nimport Router from './router';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","let defaultState = {\r\n    \"Apple iPhone 6s\": {\r\n        health: \"warning\",\r\n        data: [\r\n            { domain: \"Stonegrey\", range: \"Dark Grey\", duplicate: false, chain: false, cycle: false, fork: false },\r\n            { domain: \"Dark Grey\", range: \"Anthracite\", duplicate: false, chain: false, cycle: false, fork: false },\r\n            { domain: \"Midnight Blue\", range: \"Dark Blue\", duplicate: false, chain: false, cycle: false, fork: false },\r\n            { domain: \"Dark Grey\", range: \"Anthracite\", duplicate: false, chain: false, cycle: false, fork: false },\r\n       ]\r\n    },\r\n\r\n    \"Samsung Galaxy S8\": {\r\n        health: \"critical\",\r\n        data: [\r\n            { domain: \"Caribbean Sea\", range: \"Turqouise\", duplicate: false, chain: false, cycle: false, fork: false },\r\n            { domain: \"Stonegrey\", range: \"Dark Grey\", duplicate: false, chain: false, cycle: false, fork: false },\r\n            { domain: \"Turqouise\", range: \"Caribbean Sea\", duplicate: false, chain: false, cycle: false, fork: false },\r\n        ]\r\n    },\r\n\r\n    \"Huawei P9 Silver\": {\r\n        health: \"good\",\r\n        data: [\r\n            { domain: \"Stonegrey\", range: \"Blue\", duplicate: false, chain: false, cycle: false, fork: false },\r\n            { domain: \"Red\", range: \"Orange\", duplicate: false, chain: false, cycle: false, fork: false },\r\n        ]\r\n    },\r\n\r\n    \"Samsung Galaxy S11\": {\r\n        health: \"warning\",\r\n        data: [\r\n            { domain: \"Caribbean Sea\", range: \"Turqouise\", duplicate: false, chain: false, cycle: false, fork: false },\r\n            { domain: \"Stonegrey\", range: \"Dark Grey\", duplicate: false, chain: false, cycle: false, fork: false },\r\n            { domain: \"Caribbean Sea\", range: \"Brown\", duplicate: false, chain: false, cycle: false, fork: false },\r\n        ]\r\n    },\r\n};\r\n\r\nconst dict = (state = defaultState, action) => {\r\n\r\n    let updated = Object.assign({}, state);\r\n    let health = \"good\";\r\n\r\n    switch (action.type) {\r\n        case 'ADD_DICT':\r\n            updated[action.id] = {\r\n                health: \"good\",\r\n                data: [\r\n                    { domain: \"foo\", range: \"bar\", duplicate: false, chain: false, cycle: false, fork: false }\r\n                ]\r\n            }\r\n            return updated\r\n\r\n        case 'DEL_DICT':\r\n            delete updated[action.id]\r\n            return updated\r\n\r\n        case 'ADD_ROW':\r\n            updated[action.id].data.push({ domain: action.domain, range: action.range, duplicate: false, chain: false, cycle: false, fork: false });\r\n            return updated\r\n\r\n        case 'DEL_ROW':\r\n            let dictionarydata = updated[action.id].data.filter((el, index) => index !== action.index)\r\n\r\n            let dictionary = {\r\n                [action.id]: {\r\n                    health: action.id[\"health\"],\r\n                    data: dictionarydata\r\n                }\r\n            }\r\n\r\n            console.log(dictionary)\r\n\r\n            return { ...state, ...dictionary }\r\n\r\n        case 'UPDATE_ROW':\r\n            var newData = updated[action.id].data\r\n            \r\n            newData[action.index] = action.column === 'range' ?\r\n                ({ domain: updated[action.id].data[action.index][\"domain\"], range: action.value, duplicate: false, chain: false, cycle: false, fork: false }) :\r\n                ({ domain: action.value, range: updated[action.id].data[action.index][\"range\"], duplicate: false, chain: false, cycle: false, fork: false });\r\n            \r\n            return {\r\n                ...state,\r\n                [action.id]: {\r\n                    health: health,\r\n                    data: [...newData]\r\n                }\r\n            };\r\n            \r\n        case 'VALIDATE':\r\n            var newData = updated[action.id].data;\r\n\r\n            for (let i = 0; i < newData.length; i++) {\r\n                newData[i].duplicate = false;\r\n                newData[i].chain = false;\r\n                newData[i].cycle = false;\r\n                newData[i].fork = false;\r\n            }\r\n\r\n            health = \"good\";\r\n\r\n            for (let i = 0; i < newData.length; i++) {\r\n                for (let j = i + 1; j < newData.length; j++) {\r\n                    if (newData[i].domain === newData[j].domain) {\r\n                        if (newData[i].range === newData[j].range) {\r\n                            newData[i].duplicate = true\r\n                            newData[j].duplicate = true\r\n                            health = \"warning\";\r\n                        }\r\n                    }\r\n                    if (newData[i].domain === newData[j].domain) {\r\n                        if (newData[i].range !== newData[j].range) {\r\n                            newData[i].fork = true\r\n                            newData[j].fork = true\r\n                            health = \"warning\";\r\n                        }\r\n                    }\r\n                    if (newData[i].domain === newData[j].range) {\r\n                        if (newData[i].range === newData[j].domain) {\r\n                            newData[i].cycle = true\r\n                            newData[j].cycle = true\r\n                            health = \"critical\";\r\n                        }\r\n                    }\r\n                    if (newData[i].range === newData[j].domain) {\r\n                        if (newData[i].domain !== newData[j].range) {\r\n                            newData[i].chain = true\r\n                            newData[j].chain = true\r\n                            health = \"warning\";\r\n                        } \r\n                    } else if (newData[i].range !== newData[j].domain) {\r\n                        if (newData[i].domain === newData[j].range) {\r\n                            newData[i].chain = true\r\n                            newData[j].chain = true\r\n                            health = \"warning\";\r\n                        }         \r\n                    }\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                [action.id]: {\r\n                    health: health,\r\n                    data: [...newData]\r\n                }\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dict","import { createStore, combineReducers } from 'redux';\r\nimport dictReducer from '../reducers/dictReducer';\r\n\r\nconst store = createStore(\r\n    combineReducers({\r\n        dictionaries: dictReducer\r\n    })\r\n);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport store from './store/store'\nimport * as serviceWorker from './serviceWorker'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nrender(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}